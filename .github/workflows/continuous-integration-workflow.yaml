name: Continuos integration workflow

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
jobs:

  build:

    name: Running in Docker container (centos:7.7.1908)

    runs-on: ubuntu-18.04

    container: centos:7.7.1908

    steps:

    - name: Checking out code
      uses: actions/checkout@v2

    - name: Installing dependencies
      run: |
        yum -y install epel-release rsync unzip mailx bzip2
        yum -y install git make gcc gcc-c++ binutils libX11-devel libXpm-devel libXft-devel libXext-devel
        yum -y install curl less vim wget bc which
        yum -y install libXcomposite libXcursor libXi libXtst libXrandr alsa-lib mesa-libEGL libXdamage mesa-libGL libXScrnSaver
        yum -y install jq

    - name: Installing Anaconda
      run: |
        echo "Install anaconda 5.3.0 x86_64"
        wget -q https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh
        echo "cfbf5fe70dd1b797ec677e63c61f8efc92dad930fd1c94d60390bb07fdc09959  Anaconda3-5.3.0-Linux-x86_64.sh" > anaconda_hash_sha256
        sha256sum -c anaconda_hash_sha256
        bash Anaconda3-5.3.0-Linux-x86_64.sh -b -p /opt/anaconda3
        echo ". /opt/anaconda3/etc/profile.d/conda.sh" >> ~/.bashrc
        source ~/.bashrc
        conda update -y -n base -c defaults conda

    - name: Anaconda info
      run: |
        source ~/.bashrc
        which conda
        conda --version
        which python
        python --version



    - name: Download the Agilepy environment
      run: |
        sttag=`cat sciencetools_version.txt`
        source ~/.bashrc
        conda config --add channels conda-forge
        conda config --add channels plotly
        conda create -y -n agilepydevops -c agilescience agilepy-environment==$sttag



    - name: Running unit tests and code coverage
      run: |
        source ~/.bashrc
        conda activate agilepydevops

        python setup.py develop

        printf "import pkg_resources \npath = pkg_resources.require('agilepy')[0].location \nprint(path+'/agilepy')" > get_agilepy_installation_folder.py

        agilepy_path=$((python get_agilepy_installation_folder.py) 2>&1)

        bash $agilepy_path/scripts/start_coverage.sh

    - name: Uploading coverage report to Codacy
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
        CODACY_PROJECT_NAME: ${{ secrets.CODACY_PROJECT_NAME }}
        CODACY_USERNAME: ${{ secrets.CODACY_USERNAME }}

      run: |
        LATEST_VERSION="$(curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name)"
        curl -Ls -o codacy-coverage-reporter "https://dl.bintray.com/codacy/Binaries/${LATEST_VERSION}/codacy-coverage-reporter-linux"
        chmod +x codacy-coverage-reporter

        source ~/.bashrc
        conda activate agilepydevops
        agilepy_path=$((python get_agilepy_installation_folder.py) 2>&1)

        ./codacy-coverage-reporter report -l Python -r $agilepy_path/testing/unittesting/coverage/cov_xml_report --commit-uuid "$GITHUB_SHA"
